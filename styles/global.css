p {
    margin-top: 0px !important;
}

.mcdmrpg-header {
    padding: 5px;
    width: 100%;
    background-color: black;
    color: white;
    text-align: center;
    margin-bottom: 5px;
    font-weight: bold;
    clip-path: polygon(20px 0, calc(100% - 20px) 0, 100% 100%, 0% 100%);
    -webkit-clip-path: polygon(10px 0, calc(100% - 10px) 0, 100% 100%, 0% 100%);
}

/* Floating Header Buttons */
.sheet.system div:has(> .right-button, > .left-button) {
    position: relative;

    & > span {
        position: absolute;
        cursor: pointer;
        --button-float: 20px;

        &.right-button {
            right: var(--button-float);
        }

        &.left-button {
            left: var(--button-float);
        }
    }
}

span.roll-container {
    display: inline-block;
}

span.roll-icons:hover i {
    animation: var(--icon-rotation);
}

a.roll-link,
a.roll-to-chat {
    background-color: rgba(255, 255, 255, 0.8);
    border: 1px solid black;
    border-radius: 5px;
    font-size: 0.75rem;
    padding: 3px;
    line-height: 1.5rem;
    color: black;
}

a.roll-to-chat {
    margin-left: 5px;
}

span.roll-icons i {
    position: relative;

    &:nth-child(2) {
        right: 5px;
    }
}

.application optgroup {
    background: transparent;
}

.sheet.system .delete-button,
.sheet.system .edit-button {
    text-align: center;
    cursor: pointer;

    &.delete-button:hover {
        color: var(--delete-color);
    }
}

.application .tab[data-tab]:not(.active) {
    display: none !important;
}

/* System Property Value Display */
.ds-property {
    display: grid;
    grid-template-columns: 100px 1fr;
    align-items: center;
    grid-gap: var(--grid-gap);
    margin-bottom: 5px;

    .label {
        text-align: right;
    }
}

.ds-card {
    padding: 10px;
    border-radius: 5px;
}

.theme-dark {
    .ds-card {
        background-color: rgba(255, 255, 255, 0.03);
    }
}

/* abilities */
.ability .ability-header {
    background: linear-gradient(45deg, rgba(0, 0, 0, 1) 0%, var(--default-ability-color) 100%);
}

.ability.passive-ability .ability-header {
    background: linear-gradient(45deg, rgba(0, 0, 0, 1) 0%, var(--passive-ability-color) 100%);
}

.ability.action-ability .ability-header {
    background: linear-gradient(45deg, rgba(0, 0, 0, 1) 0%, var(--action-ability-color) 100%);
}

.ability.basic-ability .ability-header {
    background: linear-gradient(45deg, rgba(0, 0, 0, 1) 0%, var(--basic-ability-color) 100%);
}

.ability.free-ability .ability-header {
    background: linear-gradient(45deg, rgba(0, 0, 0, 1) 0%, var(--free-ability-color) 100%);
}

.ability.maneuver-ability .ability-header {
    background: linear-gradient(45deg, rgba(0, 0, 0, 1) 0%, var(--maneuver-ability-color) 100%);
}

.ability.heroic-ability .ability-header {
    background: linear-gradient(45deg, rgba(0, 0, 0, 1) 0%, var(--heroic-ability-color) 100%);
}

.ability.signature-ability .ability-header {
    background: linear-gradient(45deg, rgba(0, 0, 0, 1) 0%, var(--signature-ability-color) 100%);
}

.ability.triggered-ability .ability-header {
    background: linear-gradient(45deg, rgba(0, 0, 0, 1) 0%, var(--triggered-ability-color) 100%);
}

.ability.villain-ability .ability-header {
    background: linear-gradient(45deg, rgba(0, 0, 0, 1) 0%, var(--villain-ability-color) 100%);
}

.ability .property {
    display: grid;
    grid-template-columns: 70px 1fr;
    grid-gap: 10px;
}
.ability .property .label {
    text-align: right;
}
/* end abilities */
